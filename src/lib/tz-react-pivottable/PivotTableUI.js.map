{"version":3,"sources":["src/PivotTableUI.jsx"],"names":["DraggableAttribute","props","state","open","filterText","value","valueFilter","removeValuesFromFilter","name","addValuesToFilter","x","toLowerCase","trim","includes","e","stopPropagation","setValuesInFilter","Object","keys","attrValues","filter","y","showMenu","length","menuLimit","values","shown","matchesFilter","bind","sort","sorter","display","cursor","zIndex","moveFilterBoxToTop","setState","target","map","toggleValue","selectOnly","filtered","toggleFilterBox","getFilterBox","React","Component","defaultProps","propTypes","PropTypes","string","isRequired","func","objectOf","number","bool","Dropdown","toggle","current","r","setValue","PureComponent","PivotTableUI","aggs","aggregators","agg","console","log","unusedOrder","zIndices","maxZIndex","openDropdown","materializedInput","materializeInput","data","nextData","newState","recordsProcessed","PivotData","forEachRecord","derivedAttributes","record","push","attr","null","command","onChange","key","sendPropUpdate","$set","attribute","reduce","v","$unset","dropdown","items","classes","group","ghostClass","preventOnFilter","sorters","numValsAllowed","aggregatorName","numInputs","aggregatorCellOutlet","outlet","rendererName","renderers","rendererCell","isOpen","propUpdater","sortIcons","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","aggregatorCell","rowOrder","colOrder","Array","fill","n","i","vals","hiddenAttributes","hiddenFromAggregators","$splice","unusedAttrs","rows","cols","hiddenFromDragDrop","unusedLength","horizUnused","unusedOrientationCutoff","unusedAttrsCell","makeDnDCell","order","colAttrs","colAttrsCell","rowAttrs","rowAttrsCell","outputCell","assign","PivotTable","arrayOf"],"mappings":"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","file":"PivotTableUI.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport {PivotData, sortAs, getSort, aggregators} from './Utilities';\nimport PivotTable from './PivotTable';\nimport Sortable from 'react-sortablejs';\nimport Draggable from 'react-draggable';\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nexport class DraggableAttribute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false, filterText: '' };\n  }\n\n  toggleValue(value) {\n    if (value in this.props.valueFilter) {\n      this.props.removeValuesFromFilter(this.props.name, [value]);\n    } else {\n      this.props.addValuesToFilter(this.props.name, [value]);\n    }\n  }\n\n  matchesFilter(x) {\n    return x\n      .toLowerCase()\n      .trim()\n      .includes(this.state.filterText.toLowerCase().trim());\n  }\n\n  selectOnly(e, value) {\n    e.stopPropagation();\n    this.props.setValuesInFilter(\n      this.props.name,\n      Object.keys(this.props.attrValues).filter(y => y !== value)\n    );\n  }\n\n  getFilterBox() {\n    const showMenu =\n      Object.keys(this.props.attrValues).length < this.props.menuLimit;\n\n    const values = Object.keys(this.props.attrValues);\n    const shown = values\n      .filter(this.matchesFilter.bind(this))\n      .sort(this.props.sorter);\n\n    return (\n      <Draggable handle=\".pvtDragHandle\">\n        <div\n          className=\"pvtFilterBox\"\n          style={{\n            display: 'block',\n            cursor: 'initial',\n            zIndex: this.props.zIndex,\n          }}\n          onClick={() => this.props.moveFilterBoxToTop(this.props.name)}\n        >\n          <a onClick={() => this.setState({open: false})} className=\"pvtCloseX\">\n            ×\n          </a>\n          <span className=\"pvtDragHandle\">☰</span>\n          <h4>{this.props.name}</h4>\n\n          {showMenu || <p>(too many values to show)</p>}\n\n          {showMenu && (\n            <p>\n              <input\n                type=\"text\"\n                placeholder=\"Filter values\"\n                className=\"pvtSearch\"\n                value={this.state.filterText}\n                onChange={e =>\n                  this.setState({\n                    filterText: e.target.value,\n                  })\n                }\n              />\n              <br />\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.removeValuesFromFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Select {values.length === shown.length ? 'All' : shown.length}\n              </a>{' '}\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.addValuesToFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Deselect {values.length === shown.length ? 'All' : shown.length}\n              </a>\n            </p>\n          )}\n\n          {showMenu && (\n            <div className=\"pvtCheckContainer\">\n              {shown.map(x => (\n                <p\n                  key={x}\n                  onClick={() => this.toggleValue(x)}\n                  className={x in this.props.valueFilter ? '' : 'selected'}\n                >\n                  <a className=\"pvtOnly\" onClick={e => this.selectOnly(e, x)}>\n                    only\n                  </a>\n                  <a className=\"pvtOnlySpacer\">&nbsp;</a>\n\n                  {x === '' ? <em>null</em> : x}\n                </p>\n              ))}\n            </div>\n          )}\n        </div>\n      </Draggable>\n    );\n  }\n\n  toggleFilterBox() {\n    this.setState({open: !this.state.open});\n    this.props.moveFilterBoxToTop(this.props.name);\n  }\n\n  render() {\n    const filtered =\n      Object.keys(this.props.valueFilter).length !== 0\n        ? 'pvtFilteredAttribute'\n        : '';\n    return (\n      <li data-id={this.props.name}>\n        <span className={'pvtAttr ' + filtered}>\n          {this.props.name}\n          <span\n            className=\"pvtTriangle\"\n            onClick={this.toggleFilterBox.bind(this)}\n          >\n            {' '}\n            ▾\n          </span>\n        </span>\n\n        {this.state.open ? this.getFilterBox() : null}\n      </li>\n    );\n  }\n}\n\nDraggableAttribute.defaultProps = {\n  valueFilter: {},\n};\n\nDraggableAttribute.propTypes = {\n  name: PropTypes.string.isRequired,\n  addValuesToFilter: PropTypes.func.isRequired,\n  removeValuesFromFilter: PropTypes.func.isRequired,\n  attrValues: PropTypes.objectOf(PropTypes.number).isRequired,\n  valueFilter: PropTypes.objectOf(PropTypes.bool),\n  moveFilterBoxToTop: PropTypes.func.isRequired,\n  sorter: PropTypes.func.isRequired,\n  menuLimit: PropTypes.number,\n  zIndex: PropTypes.number,\n};\n\nexport class Dropdown extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"pvtDropdown\" style={{zIndex: this.props.zIndex}}>\n        <div\n          onClick={e => {\n            e.stopPropagation();\n            this.props.toggle();\n          }}\n          className={\n            'pvtDropdownValue pvtDropdownCurrent ' +\n            (this.props.open ? 'pvtDropdownCurrentOpen' : '')\n          }\n          role=\"button\"\n        >\n          <div className=\"pvtDropdownIcon\">{this.props.open ? '×' : '▾'}</div>\n          {this.props.current || <span>&nbsp;</span>}\n        </div>\n\n        {this.props.open && (\n          <div className=\"pvtDropdownMenu\">\n            {this.props.values.map(r => (\n              <div\n                key={r}\n                role=\"button\"\n                onClick={e => {\n                  e.stopPropagation();\n                  if (this.props.current === r) {\n                    this.props.toggle();\n                  } else {\n                    this.props.setValue(r);\n                  }\n                }}\n                className={\n                  'pvtDropdownValue ' +\n                  (r === this.props.current ? 'pvtDropdownActiveValue' : '')\n                }\n              >\n                {r}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass PivotTableUI extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    // if aggregators are passed as strings, match them with those defined in ./Utilities/aggregators\n    var aggs = {};\n    if (!!props.aggregators) {\n      for (agg in props.aggregators) {\n        aggs[agg] = aggregators[agg];\n      }\n      props.aggregators = aggs;\n    }\n    console.log(props);\n\n    this.state = {\n      unusedOrder: [],\n      zIndices: {},\n      maxZIndex: 1000,\n      openDropdown: false,\n      attrValues: {},\n      materializedInput: [],\n    };\n  }\n\n  componentDidMount() {\n    this.materializeInput(this.props.data);\n  }\n\n  componentDidUpdate() {\n    this.materializeInput(this.props.data);\n  }\n\n  materializeInput(nextData) {\n    if (this.state.data === nextData) {\n      return;\n    }\n    const newState = {\n      data: nextData,\n      attrValues: {},\n      materializedInput: [],\n    };\n    let recordsProcessed = 0;\n    PivotData.forEachRecord(\n      newState.data,\n      this.props.derivedAttributes,\n      function(record) {\n        newState.materializedInput.push(record);\n        for (const attr of Object.keys(record)) {\n          if (!(attr in newState.attrValues)) {\n            newState.attrValues[attr] = {};\n            if (recordsProcessed > 0) {\n              newState.attrValues[attr].null = recordsProcessed;\n            }\n          }\n        }\n        for (const attr in newState.attrValues) {\n          const value = attr in record ? record[attr] : 'null';\n          if (!(value in newState.attrValues[attr])) {\n            newState.attrValues[attr][value] = 0;\n          }\n          newState.attrValues[attr][value]++;\n        }\n        recordsProcessed++;\n      }\n    );\n    this.setState(newState);\n  }\n\n  sendPropUpdate(command) {\n    this.props.onChange(update(this.props, command));\n  }\n\n  propUpdater(key) {\n    return value => this.sendPropUpdate({[key]: {$set: value}});\n  }\n\n  setValuesInFilter(attribute, values) {\n    this.sendPropUpdate({\n      valueFilter: {\n        [attribute]: {\n          $set: values.reduce((r, v) => {\n            r[v] = true;\n            return r;\n          }, {}),\n        },\n      },\n    });\n  }\n\n  addValuesToFilter(attribute, values) {\n    if (attribute in this.props.valueFilter) {\n      this.sendPropUpdate({\n        valueFilter: {\n          [attribute]: values.reduce((r, v) => {\n            r[v] = {$set: true};\n            return r;\n          }, {}),\n        },\n      });\n    } else {\n      this.setValuesInFilter(attribute, values);\n    }\n  }\n\n  removeValuesFromFilter(attribute, values) {\n    this.sendPropUpdate({\n      valueFilter: {[attribute]: {$unset: values}},\n    });\n  }\n\n  moveFilterBoxToTop(attribute) {\n    this.setState(\n      update(this.state, {\n        maxZIndex: {$set: this.state.maxZIndex + 1},\n        zIndices: {[attribute]: {$set: this.state.maxZIndex + 1}},\n      })\n    );\n  }\n\n  isOpen(dropdown) {\n    return this.state.openDropdown === dropdown;\n  }\n\n  makeDnDCell(items, onChange, classes) {\n    return (\n      <Sortable\n        options={{\n          group: 'shared',\n          ghostClass: 'pvtPlaceholder',\n          filter: '.pvtFilterBox',\n          preventOnFilter: false,\n        }}\n        tag=\"td\"\n        className={classes}\n        onChange={onChange}\n      >\n        {items.map(x => (\n          <DraggableAttribute\n            name={x}\n            key={x}\n            attrValues={this.state.attrValues[x]}\n            valueFilter={this.props.valueFilter[x] || {}}\n            sorter={getSort(this.props.sorters, x)}\n            menuLimit={this.props.menuLimit}\n            setValuesInFilter={this.setValuesInFilter.bind(this)}\n            addValuesToFilter={this.addValuesToFilter.bind(this)}\n            moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\n            removeValuesFromFilter={this.removeValuesFromFilter.bind(this)}\n            zIndex={this.state.zIndices[x] || this.state.maxZIndex}\n          />\n        ))}\n      </Sortable>\n    );\n  }\n\n  render() {\n    const numValsAllowed =\n      this.props.aggregators[this.props.aggregatorName]([])().numInputs || 0;\n\n    const aggregatorCellOutlet = this.props.aggregators[\n      this.props.aggregatorName\n    ]([])().outlet;\n\n    const rendererName =\n      this.props.rendererName in this.props.renderers\n        ? this.props.rendererName\n        : Object.keys(this.props.renderers)[0];\n\n    const rendererCell = (\n      <td className=\"pvtRenderers\">\n        <Dropdown\n          current={rendererName}\n          values={Object.keys(this.props.renderers)}\n          open={this.isOpen('renderer')}\n          zIndex={this.isOpen('renderer') ? this.state.maxZIndex + 1 : 1}\n          toggle={() =>\n            this.setState({\n              openDropdown: this.isOpen('renderer') ? false : 'renderer',\n            })\n          }\n          setValue={this.propUpdater('rendererName')}\n        />\n      </td>\n    );\n\n    const sortIcons = {\n      key_a_to_z: {\n        rowSymbol: '↕',\n        colSymbol: '↔',\n        next: 'value_a_to_z',\n      },\n      value_a_to_z: {\n        rowSymbol: '↓',\n        colSymbol: '→',\n        next: 'value_z_to_a',\n      },\n      value_z_to_a: {rowSymbol: '↑', colSymbol: '←', next: 'key_a_to_z'},\n    };\n\n    const aggregatorCell = (\n      <td className=\"pvtVals\">\n        <Dropdown\n          current={this.props.aggregatorName}\n          values={Object.keys(this.props.aggregators)}\n          open={this.isOpen('aggregators')}\n          zIndex={this.isOpen('aggregators') ? this.state.maxZIndex + 1 : 1}\n          toggle={() =>\n            this.setState({\n              openDropdown: this.isOpen('aggregators') ? false : 'aggregators',\n            })\n          }\n          setValue={this.propUpdater('aggregatorName')}\n        />\n        <a\n          role=\"button\"\n          className=\"pvtRowOrder\"\n          onClick={() =>\n            this.propUpdater('rowOrder')(sortIcons[this.props.rowOrder].next)\n          }\n        >\n          {sortIcons[this.props.rowOrder].rowSymbol}\n        </a>\n        <a\n          role=\"button\"\n          className=\"pvtColOrder\"\n          onClick={() =>\n            this.propUpdater('colOrder')(sortIcons[this.props.colOrder].next)\n          }\n        >\n          {sortIcons[this.props.colOrder].colSymbol}\n        </a>\n        {numValsAllowed > 0 && <br />}\n        {new Array(numValsAllowed).fill().map((n, i) => [\n          <Dropdown\n            key={i}\n            current={this.props.vals[i]}\n            values={Object.keys(this.state.attrValues).filter(\n              e =>\n                !this.props.hiddenAttributes.includes(e) &&\n                !this.props.hiddenFromAggregators.includes(e)\n            )}\n            open={this.isOpen(`val${i}`)}\n            zIndex={this.isOpen(`val${i}`) ? this.state.maxZIndex + 1 : 1}\n            toggle={() =>\n              this.setState({\n                openDropdown: this.isOpen(`val${i}`) ? false : `val${i}`,\n              })\n            }\n            setValue={value =>\n              this.sendPropUpdate({\n                vals: {$splice: [[i, 1, value]]},\n              })\n            }\n          />,\n          i + 1 !== numValsAllowed ? <br key={`br${i}`} /> : null,\n        ])}\n        {aggregatorCellOutlet && aggregatorCellOutlet(this.props.data)}\n      </td>\n    );\n\n    const unusedAttrs = Object.keys(this.state.attrValues)\n      .filter(\n        e =>\n          !this.props.rows.includes(e) &&\n          !this.props.cols.includes(e) &&\n          !this.props.hiddenAttributes.includes(e) &&\n          !this.props.hiddenFromDragDrop.includes(e)\n      )\n      .sort(sortAs(this.state.unusedOrder));\n\n    const unusedLength = unusedAttrs.reduce((r, e) => r + e.length, 0);\n    const horizUnused = unusedLength < this.props.unusedOrientationCutoff;\n\n    const unusedAttrsCell = this.makeDnDCell(\n      unusedAttrs,\n      order => this.setState({unusedOrder: order}),\n      `pvtAxisContainer pvtUnused ${\n        horizUnused ? 'pvtHorizList' : 'pvtVertList'\n      }`\n    );\n\n    const colAttrs = this.props.cols.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n\n    const colAttrsCell = this.makeDnDCell(\n      colAttrs,\n      this.propUpdater('cols'),\n      'pvtAxisContainer pvtHorizList pvtCols'\n    );\n\n    const rowAttrs = this.props.rows.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n    const rowAttrsCell = this.makeDnDCell(\n      rowAttrs,\n      this.propUpdater('rows'),\n      'pvtAxisContainer pvtVertList pvtRows'\n    );\n    const outputCell = (\n      <td className=\"pvtOutput\">\n        <PivotTable\n          {...update(this.props, {\n            data: {$set: this.state.materializedInput},\n          })}\n        />\n      </td>\n    );\n\n    if (horizUnused) {\n      return (\n        <table className=\"pvtUi\">\n          <tbody onClick={() => this.setState({openDropdown: false})}>\n            <tr>\n              {rendererCell}\n              {unusedAttrsCell}\n            </tr>\n            <tr>\n              {aggregatorCell}\n              {colAttrsCell}\n            </tr>\n            <tr>\n              {rowAttrsCell}\n              {outputCell}\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <table className=\"pvtUi\">\n        <tbody onClick={() => this.setState({openDropdown: false})}>\n          <tr>\n            {rendererCell}\n            {aggregatorCell}\n            {colAttrsCell}\n          </tr>\n          <tr>\n            {unusedAttrsCell}\n            {rowAttrsCell}\n            {outputCell}\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPivotTableUI.propTypes = Object.assign({}, PivotTable.propTypes, {\n  onChange: PropTypes.func.isRequired,\n  hiddenAttributes: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromAggregators: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromDragDrop: PropTypes.arrayOf(PropTypes.string),\n  unusedOrientationCutoff: PropTypes.number,\n  menuLimit: PropTypes.number,\n  aggregators: PropTypes.arrayOf(PropTypes.string),\n});\n\nPivotTableUI.defaultProps = Object.assign({}, PivotTable.defaultProps, {\n  hiddenAttributes: [],\n  hiddenFromAggregators: [],\n  hiddenFromDragDrop: [],\n  unusedOrientationCutoff: 85,\n  menuLimit: 500,\n  aggregators: aggregators,\n});\n\nexport default PivotTableUI;\n"]}